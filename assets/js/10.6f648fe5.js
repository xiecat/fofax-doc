(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{413:function(e,t,n){"use strict";n.r(t);var s=n(52),a=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"命令参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令参数"}},[this._v("#")]),this._v(" 命令参数")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('fofax -h\n\n      ____        ____       _  __\n     / __/____   / __/____ _| |/ /\n    / /_ / __ \\ / /_ / __ `/|   /\n   / __// /_/ // __// /_/ //   |\n  /_/   \\____//_/   \\__,_//_/|_|\n                 \tvv0.1.19-next\n\t\t\thttps://fofax.xiecat.fun\n\nfofaX is a command line fofa query tool, simple is the best!\n\nUsage:\n  fofax [flags]\n\nFlags:\nCONFIGS:\n   -email, -fofa-email string  Fofa API Email (default "be****s@qq.com")\n   -key, -fofakey string       Fofa API Key (default "22*****************7657")\n   -p, -proxy string           proxy for http like http://127.0.0.1:8080\n   -fofa-url string            Fofa url (default "https://fofa.so")\n   -debug                      Debug mode\n   -sp, -show-privacy          Debug mode Show Privacy\n   -update                     Update fofax\n   -du, -disable-update        Close update alerts\n\nFILTERS:\n   -fs, -fetch-size int          The maximum number of query (default 100)\n   -e, -exclude                  Exclude the honeypot.\n   -ec, -exclude-country-cn      Exclude CN.\n   -ffi, -fetch-fullHost-info    URL fetch, with scheme, hostname, port\n   -fto, -fetch-titles-ofDomain  Fetch website title\n   -fjo, -fetch-jarm-ofDomain    Fetch website jarm\n   -ff, -fetch-fields string     Fetch by fields.eg: (host,lastupdatetime)\n   -fetch-fields-split string    Specify characters to split data in different fields (default ",")\n\nSINGLE QUERY/CERT/ICON:\n   -q, -query string              FoFa query statement\n   -uc, -url-cert string          Enter the certificate of the https URL to query\n   -iu, -url-to-icon-hash string  Enter the URL of an icon, calculate it and query it\n   -if, -icon-file-path string    Calculate the hash of the local icon file, then query it\n\nMULTIPLE QUERY/CERT/ICON:\n   -fcf, -fofa-coin-file string      Load files downloaded with fofa coins (only use -ffi -fs or not)\n   -qf, -query-file string           Load files, query multiple statements\n   -ucf, -url-cert-file string       Read the URL from the file, calculate the cert and then query it\n   -iuf, -icon-hash-url-file string  Retrieve the URL from the file, calculate the icon hash and query it\n\nFX GRAMMER:\n   -g, -gen string           Generate fx statement files eg: default_fx.yaml\n   -fd, -fxdir string        fxdir directory (default "/Users/user/.config/fofax/fxrules")\n   -l, -lists                List of fx statements\n   -lt, -list-tags           List fx tags\n   -s, -search string        Search for fx statements. Statements are separated by semicolons eg: id=fx-2021-01;query="jupyter Unauth"\n   -tree                     Print syntax tree\n   -fe, -fofa-ext            Using extended syntax(fx)\n   -ss, -show-single string  Display a single fx message\n\nOTHER OPTIONS:\n   -config string  fofax configuration file.The file reading order(fofax.yaml,/Users/user/.config/fofax/fofax.yaml,/etc/fofax/fofax.yaml,/etc/fofax.yaml) (default "/Users/user/.config/fofax/fofax.yaml")\n   -v, -version    Show fofaX version\n   -use            Syntax queries\n   -open           Open with your browser only support pipline/-q/-uc/-iu/-if\n   -no-limit-open  No limit to the number of openings in your browser\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);